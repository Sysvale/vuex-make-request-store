{"version":3,"sources":["requestsStates/initialState.js","requestsStates/requestState.js","requestsStates/successState.js","requestsStates/failureState.js","requestsStates/index.js","makeMutations.js","index.js"],"names":["initialState","isFetching","hasFailed","hasSucceeded","errors","requestState","successState","failureState","callbacksResolver","request","state","Object","assign","success","failure","makeMutations","requestName","makeRequestStore","module","name","keys","actions","params","commit","then","data","catch","error","mutations"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const initialState = {\n\tisFetching: false,\n\thasFailed: false,\n\thasSucceeded: false,\n\terrors: {},\n};\n\nexport default initialState;\n","import initialState from './initialState';\n\nconst requestState = {\n\t...initialState,\n\tisFetching: true,\n};\n\nexport default requestState;\n","import initialState from './initialState';\n\nconst successState = {\n\t...initialState,\n\thasSucceeded: true,\n};\n\nexport default successState;\n","import initialState from './initialState';\n\nconst failureState = errors => ({\n\t...initialState,\n\thasFailed: true,\n\terrors,\n});\n\nexport default failureState;\n","export { default as initialState } from './initialState';\nexport { default as requestState } from './requestState';\nexport { default as successState } from './successState';\nexport { default as failureState } from './failureState';\n","import {\n\trequestState,\n\tsuccessState,\n\tfailureState,\n} from './requestsStates';\n\nfunction callbacksResolver() {\n\treturn {\n\t\trequest: (state) => {\n\t\t\tObject.assign(state, requestState);\n\t\t},\n\n\t\tsuccess: (state) => {\n\t\t\tObject.assign(state, successState);\n\t\t},\n\n\t\tfailure: (state, errors) => {\n\t\t\tObject.assign(state, failureState(errors));\n\t\t},\n\t};\n}\n\nexport default function makeMutations(requestName) {\n\tconst { request, success, failure } = callbacksResolver();\n\n\treturn {\n\t\t[`${requestName}Request`]: request,\n\t\t[`${requestName}Success`]: success,\n\t\t[`${requestName}Failure`]: failure,\n\t};\n}\n","import { initialState } from './requestsStates';\nimport makeMutations from './makeMutations';\n\nexport default function makeRequestStore(module) {\n\tconst name = Object.keys(module)[0];\n\n\treturn {\n\t\t[name]: {\n\t\t\tstate: { ...initialState },\n\n\t\t\tactions: {\n\t\t\t\t[name]({ commit }, params) {\n\t\t\t\t\tcommit(`${name}Request`);\n\n\t\t\t\t\treturn module[name](params)\n\t\t\t\t\t\t.then(({ data }) => {\n\t\t\t\t\t\t\tcommit(`${name}Success`);\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tcommit(`${name}Failure`, error);\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tmutations: {\n\t\t\t\t...makeMutations(name),\n\t\t\t},\n\t\t}\n\t};\n};\n"]}